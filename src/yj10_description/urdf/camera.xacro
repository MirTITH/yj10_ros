<?xml version="1.0"?>
<!-- Revolute-Revolute Manipulator -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- Camera -->
    <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
    <xacro:property name="camera_name" value="gz_cam" />

    <joint name="camera_joint" type="fixed">
        <origin xyz="${camera_link} 0 0.1" rpy="0 0 ${radians(90)}" />
        <parent link="link4" />
        <child link="camera_link" />
    </joint>

    <link name="camera_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${camera_link} ${camera_link} ${camera_link}" />
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${camera_link} ${camera_link} ${camera_link}" />
            </geometry>
            <material name="orange" />
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>
    </link>

    <joint name="camera_optical_joint" type="fixed">
        <!-- these values have to be these values otherwise the gazebo camera image
            won't be aligned properly with the frame it is supposedly originating from -->
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
        <parent link="camera_link" />
        <child link="camera_link_optical" />
    </joint>

    <link name="camera_link_optical" />

    <!-- Gazebo Camera -->
    <gazebo reference="camera_link">
        <sensor type="depth" name="camera">
            <update_rate>30.0</update_rate>
            <camera name="${camera_name}">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame.
                   That pixel's noise value is added to each of its color
                   channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_openni_kinect.so">
                <baseline>0.2</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>1.0</updateRate>
                <cameraName>${camera_name}_ir</cameraName>
                <imageTopicName>/${camera_name}/color/image_raw</imageTopicName>
                <cameraInfoTopicName>/${camera_name}/color/camera_info</cameraInfoTopicName>
                <depthImageTopicName>/${camera_name}/depth/image_raw</depthImageTopicName>
                <depthImageInfoTopicName>/${camera_name}/depth/camera_info</depthImageInfoTopicName>
                <pointCloudTopicName>/${camera_name}/depth/points</pointCloudTopicName>
                <frameName>camera_link_optical</frameName>
                <pointCloudCutoff>0.5</pointCloudCutoff>
                <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
                <distortionK1>0.00000001</distortionK1>
                <distortionK2>0.00000001</distortionK2>
                <distortionK3>0.00000001</distortionK3>
                <distortionT1>0.00000001</distortionT1>
                <distortionT2>0.00000001</distortionT2>
                <CxPrime>0</CxPrime>
                <Cx>0</Cx>
                <Cy>0</Cy>
                <focalLength>0</focalLength>
                <hackBaseline>0</hackBaseline>
            </plugin>
        </sensor>
    </gazebo>
</robot>    